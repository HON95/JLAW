/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ninja_hon95_jlaw_JlawSteeringWheel */

#ifndef _Included_ninja_hon95_jlaw_JlawSteeringWheel
#define _Included_ninja_hon95_jlaw_JlawSteeringWheel
#ifdef __cplusplus
extern "C" {
#endif
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MAX_CONTROLLERS
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MAX_CONTROLLERS 2L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_FORCE_NONE
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_FORCE_NONE -1L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_FORCE_SPRING
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_FORCE_SPRING 0L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_FORCE_CONSTANT
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_FORCE_CONSTANT 1L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_FORCE_DAMPER
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_FORCE_DAMPER 2L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_FORCE_SIDE_COLLISION
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_FORCE_SIDE_COLLISION 3L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_FORCE_FRONTAL_COLLISION
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_FORCE_FRONTAL_COLLISION 4L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_FORCE_DIRT_ROAD
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_FORCE_DIRT_ROAD 5L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_FORCE_BUMPY_ROAD
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_FORCE_BUMPY_ROAD 6L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_FORCE_SLIPPERY_ROAD
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_FORCE_SLIPPERY_ROAD 7L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_FORCE_SURFACE_EFFECT
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_FORCE_SURFACE_EFFECT 8L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_NUMBER_FORCE_EFFECTS
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_NUMBER_FORCE_EFFECTS 9L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_FORCE_SOFTSTOP
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_FORCE_SOFTSTOP 10L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_FORCE_CAR_AIRBORNE
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_FORCE_CAR_AIRBORNE 11L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_PERIODICTYPE_NONE
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_PERIODICTYPE_NONE -1L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_PERIODICTYPE_SINE
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_PERIODICTYPE_SINE 0L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_PERIODICTYPE_SQUARE
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_PERIODICTYPE_SQUARE 1L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_PERIODICTYPE_TRIANGLE
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_PERIODICTYPE_TRIANGLE 2L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_DEVICE_TYPE_NONE
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_DEVICE_TYPE_NONE -1L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_DEVICE_TYPE_WHEEL
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_DEVICE_TYPE_WHEEL 0L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_DEVICE_TYPE_JOYSTICK
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_DEVICE_TYPE_JOYSTICK 1L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_DEVICE_TYPE_GAMEPAD
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_DEVICE_TYPE_GAMEPAD 2L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_DEVICE_TYPE_OTHER
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_DEVICE_TYPE_OTHER 3L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_NUMBER_DEVICE_TYPES
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_NUMBER_DEVICE_TYPES 4L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MANUFACTURER_NONE
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MANUFACTURER_NONE -1L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MANUFACTURER_LOGITECH
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MANUFACTURER_LOGITECH 0L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MANUFACTURER_MICROSOFT
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MANUFACTURER_MICROSOFT 1L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MANUFACTURER_OTHER
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MANUFACTURER_OTHER 2L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_G27
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_G27 0L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_DRIVING_FORCE_GT
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_DRIVING_FORCE_GT 1L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_G25
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_G25 2L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_MOMO_RACING
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_MOMO_RACING 3L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_MOMO_FORCE
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_MOMO_FORCE 4L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_DRIVING_FORCE_PRO
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_DRIVING_FORCE_PRO 5L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_DRIVING_FORCE
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_DRIVING_FORCE 6L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_NASCAR_RACING_WHEEL
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_NASCAR_RACING_WHEEL 7L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_FORMULA_FORCE
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_FORMULA_FORCE 8L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_FORMULA_FORCE_GP
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_FORMULA_FORCE_GP 9L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_FORCE_3D_PRO
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_FORCE_3D_PRO 10L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_EXTREME_3D_PRO
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_EXTREME_3D_PRO 11L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_FREEDOM_24
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_FREEDOM_24 12L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_ATTACK_3
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_ATTACK_3 13L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_FORCE_3D
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_FORCE_3D 14L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_STRIKE_FORCE_3D
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_STRIKE_FORCE_3D 15L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_G940_JOYSTICK
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_G940_JOYSTICK 16L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_G940_THROTTLE
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_G940_THROTTLE 17L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_G940_PEDALS
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_G940_PEDALS 18L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_RUMBLEPAD
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_RUMBLEPAD 19L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_RUMBLEPAD_2
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_RUMBLEPAD_2 20L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_CORDLESS_RUMBLEPAD_2
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_CORDLESS_RUMBLEPAD_2 21L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_CORDLESS_GAMEPAD
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_CORDLESS_GAMEPAD 22L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_DUAL_ACTION_GAMEPAD
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_DUAL_ACTION_GAMEPAD 23L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_PRECISION_GAMEPAD_2
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_PRECISION_GAMEPAD_2 24L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_CHILLSTREAM
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_CHILLSTREAM 25L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_G29
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_G29 26L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_G920
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_MODEL_G920 27L
#undef ninja_hon95_jlaw_JlawSteeringWheel_LOGI_NUMBER_MODELS
#define ninja_hon95_jlaw_JlawSteeringWheel_LOGI_NUMBER_MODELS 28L
/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiSteeringInitializeWithWindow
 * Signature: (ZLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiSteeringInitializeWithWindow
  (JNIEnv *, jclass, jboolean, jstring);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiSteeringInitialize
 * Signature: (Z)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiSteeringInitialize
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiSteeringGetSdkVersion
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiSteeringGetSdkVersion
  (JNIEnv *, jclass);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiUpdate
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiUpdate
  (JNIEnv *, jclass);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiGetState
 * Signature: (I)Lninja/hon95/jlaw/JlawSteeringWheel/DIJoystick2;
 */
JNIEXPORT jobject JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiGetState
  (JNIEnv *, jclass, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiGetDevicePath
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiGetDevicePath
  (JNIEnv *, jclass, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiGetFriendlyProductName
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiGetFriendlyProductName
  (JNIEnv *, jclass, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiIsConnected
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiIsConnected
  (JNIEnv *, jclass, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiIsDeviceConnected
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiIsDeviceConnected
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiIsManufacturerConnected
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiIsManufacturerConnected
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiIsModelConnected
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiIsModelConnected
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiButtonTriggered
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiButtonTriggered
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiButtonReleased
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiButtonReleased
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiButtonIsPressed
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiButtonIsPressed
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiGenerateNonLinearValues
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiGenerateNonLinearValues
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiGetNonLinearValue
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiGetNonLinearValue
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiHasForceFeedback
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiHasForceFeedback
  (JNIEnv *, jclass, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiIsPlaying
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiIsPlaying
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiPlaySpringForce
 * Signature: (IIII)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiPlaySpringForce
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiStopSpringForce
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiStopSpringForce
  (JNIEnv *, jclass, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiPlayConstantForce
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiPlayConstantForce
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiStopConstantForce
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiStopConstantForce
  (JNIEnv *, jclass, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiPlayDamperForce
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiPlayDamperForce
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiStopDamperForce
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiStopDamperForce
  (JNIEnv *, jclass, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiPlaySideCollisionForce
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiPlaySideCollisionForce
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiPlayFrontalCollisionForce
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiPlayFrontalCollisionForce
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiPlayDirtRoadEffect
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiPlayDirtRoadEffect
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiStopDirtRoadEffect
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiStopDirtRoadEffect
  (JNIEnv *, jclass, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiPlayBumpyRoadEffect
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiPlayBumpyRoadEffect
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiStopBumpyRoadEffect
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiStopBumpyRoadEffect
  (JNIEnv *, jclass, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiPlaySlipperyRoadEffect
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiPlaySlipperyRoadEffect
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiStopSlipperyRoadEffect
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiStopSlipperyRoadEffect
  (JNIEnv *, jclass, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiPlaySurfaceEffect
 * Signature: (IIII)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiPlaySurfaceEffect
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiStopSurfaceEffect
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiStopSurfaceEffect
  (JNIEnv *, jclass, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiPlayCarAirborne
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiPlayCarAirborne
  (JNIEnv *, jclass, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiStopCarAirborne
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiStopCarAirborne
  (JNIEnv *, jclass, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiPlaySoftstopForce
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiPlaySoftstopForce
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiStopSoftstopForce
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiStopSoftstopForce
  (JNIEnv *, jclass, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiSetPreferredControllerProperties
 * Signature: (Lninja/hon95/jlaw/JlawSteeringWheel/LogiControllerPropertiesData;)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiSetPreferredControllerProperties
  (JNIEnv *, jclass, jobject);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiGetCurrentControllerProperties
 * Signature: (I)Lninja/hon95/jlaw/JlawSteeringWheel/LogiControllerPropertiesData;
 */
JNIEXPORT jobject JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiGetCurrentControllerProperties
  (JNIEnv *, jclass, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiGetShifterMode
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiGetShifterMode
  (JNIEnv *, jclass, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiSetOperatingRange
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiSetOperatingRange
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiGetOperatingRange
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiGetOperatingRange
  (JNIEnv *, jclass, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiPlayLeds
 * Signature: (IFFF)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiPlayLeds
  (JNIEnv *, jclass, jint, jfloat, jfloat, jfloat);

/*
 * Class:     ninja_hon95_jlaw_JlawSteeringWheel
 * Method:    nLogiSteeringShutdown
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ninja_hon95_jlaw_JlawSteeringWheel_nLogiSteeringShutdown
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class ninja_hon95_jlaw_JlawSteeringWheel_LogiControllerPropertiesData */

#ifndef _Included_ninja_hon95_jlaw_JlawSteeringWheel_LogiControllerPropertiesData
#define _Included_ninja_hon95_jlaw_JlawSteeringWheel_LogiControllerPropertiesData
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class ninja_hon95_jlaw_JlawSteeringWheel_DIJoystick2 */

#ifndef _Included_ninja_hon95_jlaw_JlawSteeringWheel_DIJoystick2
#define _Included_ninja_hon95_jlaw_JlawSteeringWheel_DIJoystick2
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
