/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ninja_hon95_jlaw_JlawLed */

#ifndef _Included_ninja_hon95_jlaw_JlawLed
#define _Included_ninja_hon95_jlaw_JlawLed
#ifdef __cplusplus
extern "C" {
#endif
#undef ninja_hon95_jlaw_JlawLed_LOGI_LED_BITMAP_WIDTH
#define ninja_hon95_jlaw_JlawLed_LOGI_LED_BITMAP_WIDTH 21L
#undef ninja_hon95_jlaw_JlawLed_LOGI_LED_BITMAP_HEIGHT
#define ninja_hon95_jlaw_JlawLed_LOGI_LED_BITMAP_HEIGHT 6L
#undef ninja_hon95_jlaw_JlawLed_LOGI_LED_BITMAP_BYTES_PER_KEY
#define ninja_hon95_jlaw_JlawLed_LOGI_LED_BITMAP_BYTES_PER_KEY 6L
#undef ninja_hon95_jlaw_JlawLed_LOGI_LED_BITMAP_SIZE
#define ninja_hon95_jlaw_JlawLed_LOGI_LED_BITMAP_SIZE 756L
#undef ninja_hon95_jlaw_JlawLed_LOGI_LED_DEVICETYPE_MONOCHROME
#define ninja_hon95_jlaw_JlawLed_LOGI_LED_DEVICETYPE_MONOCHROME 1L
#undef ninja_hon95_jlaw_JlawLed_LOGI_LED_DEVICETYPE_RGB
#define ninja_hon95_jlaw_JlawLed_LOGI_LED_DEVICETYPE_RGB 2L
#undef ninja_hon95_jlaw_JlawLed_LOGI_LED_DEVICETYPE_PERKEY_RGB
#define ninja_hon95_jlaw_JlawLed_LOGI_LED_DEVICETYPE_PERKEY_RGB 4L
#undef ninja_hon95_jlaw_JlawLed_LOGI_LED_DEVICETYPE_ALL
#define ninja_hon95_jlaw_JlawLed_LOGI_LED_DEVICETYPE_ALL 7L
#undef ninja_hon95_jlaw_JlawLed_LOGI_LED_DURATION_INFINATE
#define ninja_hon95_jlaw_JlawLed_LOGI_LED_DURATION_INFINATE 0L
/*
 * Class:     ninja_hon95_jlaw_JlawLed
 * Method:    nLogiLedInit
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawLed_nLogiLedInit
  (JNIEnv *, jclass);

/*
 * Class:     ninja_hon95_jlaw_JlawLed
 * Method:    nLogiLedGetSdkVersion
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_ninja_hon95_jlaw_JlawLed_nLogiLedGetSdkVersion
  (JNIEnv *, jclass);

/*
 * Class:     ninja_hon95_jlaw_JlawLed
 * Method:    nLogiLedSetTargetDevice
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawLed_nLogiLedSetTargetDevice
  (JNIEnv *, jclass, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawLed
 * Method:    nLogiLedSaveCurrentLighting
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawLed_nLogiLedSaveCurrentLighting
  (JNIEnv *, jclass);

/*
 * Class:     ninja_hon95_jlaw_JlawLed
 * Method:    nLogiLedSetLighting
 * Signature: (III)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawLed_nLogiLedSetLighting
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawLed
 * Method:    nLogiLedRestoreLighting
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawLed_nLogiLedRestoreLighting
  (JNIEnv *, jclass);

/*
 * Class:     ninja_hon95_jlaw_JlawLed
 * Method:    nLogiLedFlashLighting
 * Signature: (IIIII)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawLed_nLogiLedFlashLighting
  (JNIEnv *, jclass, jint, jint, jint, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawLed
 * Method:    nLogiLedPulseLighting
 * Signature: (IIIII)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawLed_nLogiLedPulseLighting
  (JNIEnv *, jclass, jint, jint, jint, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawLed
 * Method:    nLogiLedStopEffects
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawLed_nLogiLedStopEffects
  (JNIEnv *, jclass);

/*
 * Class:     ninja_hon95_jlaw_JlawLed
 * Method:    nLogiLedSetLightingFromBitmap
 * Signature: ([B)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawLed_nLogiLedSetLightingFromBitmap
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     ninja_hon95_jlaw_JlawLed
 * Method:    nLogiLedSetLightingForKeyWithScanCode
 * Signature: (IIII)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawLed_nLogiLedSetLightingForKeyWithScanCode
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawLed
 * Method:    nLogiLedSetLightingForKeyWithHidCode
 * Signature: (IIII)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawLed_nLogiLedSetLightingForKeyWithHidCode
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawLed
 * Method:    nLogiLedSetLightingForKeyWithQuartzCode
 * Signature: (IIII)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawLed_nLogiLedSetLightingForKeyWithQuartzCode
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawLed
 * Method:    nLogiLedSetLightingForKeyWithKeyName
 * Signature: (IIII)Z
 */
JNIEXPORT jboolean JNICALL Java_ninja_hon95_jlaw_JlawLed_nLogiLedSetLightingForKeyWithKeyName
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     ninja_hon95_jlaw_JlawLed
 * Method:    nLogiLedShutdown
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_ninja_hon95_jlaw_JlawLed_nLogiLedShutdown
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class ninja_hon95_jlaw_JlawLed_KeyName */

#ifndef _Included_ninja_hon95_jlaw_JlawLed_KeyName
#define _Included_ninja_hon95_jlaw_JlawLed_KeyName
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
